using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Domain;

namespace DAL.Interfaces
{
    public interface IUOW
    {
        //save pending changes to the data store
        void Commit();

        //get repository for type
        //T GetRepository<T>() where T : class;

        //Standard repos, autogenerated
        IEFRepository<AdditionalProduct> AdditionalProducts { get; }
        IEFRepository<AdditionalProductInOrder> AdditionalProductInOrders { get; }
        IEFRepository<Component> Components { get; }
        IEFRepository<ComponentAsTopping> ComponentAsToppings { get; }
        IEFRepository<ComponentInPizza> ComponentInPizzas { get; }
        IEFRepository<Coupon> Coupons { get; }
        IEFRepository<Invoice> Invoices { get; }
        IEFRepository<Order> Orders { get; }
        IEFRepository<PaymentMethod> PaymentMethods { get; }
        IEFRepository<Person> Persons { get; }
        IEFRepository<Pizza> Pizzas { get; }
        IEFRepository<PizzaInOrder> PizzaInOrders { get; }
        IEFRepository<PizzaPriceBySize> PizzaPriceBySizes { get; }
        IEFRepository<PizzaSize> PizzaSizes { get; }
        IEFRepository<Price> Prices { get; }
        IEFRepository<PriceType> PriceTypes { get; }
        IEFRepository<Topping> Toppings { get; }
        IEFRepository<ToppingInPizzaOrder> ToppingInPizzaOrders { get; }
        //Customs repos, manually implemented


    }
}
